/**
 * Add a menu to the document.
 */
function onOpen() {
  DocumentApp.getUi().createMenu('LaTeX')
      .addItem('Insert LaTeX expression', 'latexDialog')
      .addItem('Edit LaTeX expression (work in progress)', 'editFormula')
      .addItem('What is this?', 'latexHelp')
      .addToUi();
}

/**
 * Shows a sidebar where LaTeX can be entered.
 */
function latexDialog() {
  // Get the last added formula, or use the fallback if none exists.
  var fallback = '\\large\\left\\{\\begin{matrix}1x &+& 2x & =3\\\\ -x &+&y  & =7\\end{matrix}\\right.';
  var LaTeX = ScriptProperties.getProperty('latex') || fallback;

  var app = UiApp.createApplication().setTitle('LaTeX editor');
  var area = app.createTextArea().setName('formula').setText(LaTeX).setWidth('100%').setHeight('300px');
  app.add(area);

  var saveFormula = app.createServerHandler('saveFormula');
  saveFormula.addCallbackElement(area);
  app.add(app.createButton('Save and insert', saveFormula));
  
  DocumentApp.getUi().showSidebar(app);
}

/**
 * Inserts the parsed LaTeX experssion to the document.
 */
function saveFormula(eventInfo) {
  var fragment = 'http://latex.codecogs.com/gif.latex?';
  var attributes = {};
  attributes[DocumentApp.Attribute.LINK_URL] = encodeURI(fragment + eventInfo.parameter.formula);

  var cursor = DocumentApp.getActiveDocument().getCursor();
  
  if (cursor) {
  } else {
    DocumentApp.getActiveDocument().getSelection().getSelectedElements()[0].getElement().removeFromParent();
    DocumentApp.getActiveDocument().getCursor();
//    DocumentApp.getUi().alert('Cannot find a cursor in the document.');
    cursor = DocumentApp.getActiveDocument().getCursor();
  }
    // Attempt to insert an image at the cursor position. If insertion returns null,
    // then the cursor's containing element doesn't allow text insertions.
    var url = UrlFetchApp.fetch(encodeURI(fragment + eventInfo.parameter.formula));
    // This 'code' thing is an attempt to store the LaTeX expression with the
    // document element, so it can be edited later on. Work in progress.
    // Actual insertion of LaTeX image happens here.
    var element = cursor.insertInlineImage(url.getBlob()).setAttributes(attributes);
}

// Displays a popup with help.
function latexHelp() {  
  var app = UiApp.createApplication().setTitle('gLaTeX (work in progress)');
  var message = 'gLaTeX is a tool for inserting LaTeX-experssions into Google documents, thereby allowing complex formulas and stuff. \n\n You can find the source code at https://github.com/Itangalo/gLaTeX. A demo video is found at http://www.youtube.com/watch?v=bV75ZlmZit4 \n\n The formula images are generated by codecogs: http://www.codecogs.com/latex/eqneditor.php. Many thanks to them.';
  app.add(app.createHTML(message).setWidth('100%'));

  DocumentApp.getUi().showSidebar(app);

}

// Opens a selected formula for editing. Kind of.
function editFormula() {
  var fragment = 'http://latex.codecogs.com/gif.latex?';
  var attributes = {};
  attributes[DocumentApp.Attribute.LINK_URL] = encodeURI(fragment + ScriptProperties.getProperty('latex'));
  var selection = DocumentApp.getActiveDocument().getSelection().getSelectedElements()[0].getElement();
  var formula = selection.getAttributes()[DocumentApp.Attribute.LINK_URL];
  if (formula == null) {
    
  }
  else {
    formula = decodeURI(formula.substring(fragment.length, formula.length));
  }

  var app = UiApp.createApplication().setTitle('LaTeX editor');
  var area = app.createTextArea().setName('formula').setText(formula).setWidth('100%').setHeight('300px');
  app.add(area);

  var updateFormula = app.createServerHandler('updateFormula');
  updateFormula.addCallbackElement(area);
  app.add(app.createButton('Update expression', updateFormula));

  DocumentApp.getUi().showSidebar(app);

  
//  selection.setAttributes(attributes)
//  debug(formula);
}

/**
 * Inserts the parsed LaTeX experssion to the document.
 */
function updateFormula(eventInfo) {
  saveFormula(eventInfo);
  return UiApp.getActiveApplication();

  var cursor = DocumentApp.getActiveDocument().getCursor();
  if (cursor) {
    // Attempt to insert an image at the cursor position. If insertion returns null,
    // then the cursor's containing element doesn't allow text insertions.
    var url = UrlFetchApp.fetch(encodeURI('http://latex.codecogs.com/gif.latex?' + eventInfo.parameter.formula));
    // This 'code' thing is an attempt to store the LaTeX expression with the
    // document element, so it can be edited later on. Work in progress.
    var code = {};
    code[DocumentApp.Attribute.CODE] = eventInfo.parameter.formula;
    // Actual insertion of LaTeX image happens here.
    var element = cursor.insertInlineImage(url.getBlob()).setAttributes(code);
  } else {
    DocumentApp.getUi().alert('Cannot find a cursor in the document.');
  }
}

// (For development only.)
function dev() {
  var formula = 'x^2';
  var app = UiApp.createApplication().setTitle('Dev');
  var area = app.createTextArea().setName('formula').setId('formula').setText(formula).setWidth('100%').setHeight('300px');
  app.add(area);

  var devHandler = app.createServerHandler('devHandler');
  devHandler.addCallbackElement(area);
  app.add(app.createButton('Update formula', devHandler));
  
  var image = app.createImage('http://www.mathwarehouse.com/quadratic/images/quadratic-formula-example.gif');
  var image = app.createHTML('<a href="http://dn.se/"><img src="http://www.mathwarehouse.com/quadratic/images/quadratic-formula-example.gif" />(image)</a>');
//  var anchor = app.createAnchor(image, true, 'http://www.mathwarehouse.com/quadratic/images/quadratic-formula-example.gif');
  app.add(image);

  DocumentApp.getUi().showSidebar(app);
}

function devHandler(eventInfo) {
  var app = UiApp.getActiveApplication();
  app.getElementById('formula').setText('hazza');
  return app;
}

// (For development only.)
function debug(variable) {
  var app = UiApp.createApplication().setTitle('Debug');
  var message = 'type: ' + typeof variable + '<br /><br />';
  message += 'content: ' + variable + '<br /><br />';

  if (typeof variable == 'object' || typeof variable == 'array') {
    for (var i in variable) {
      message += i + ': ' + variable[i] + '<br /><br />';
    }
  }
  app.add(app.createHTML(message).setWidth('100%'));

  DocumentApp.getUi().showSidebar(app);
}
